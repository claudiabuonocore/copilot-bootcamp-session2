name: Step 2-5 # Build with Context

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  actions: write
  issues: write


jobs:
  find_exercise:
    name: Find Exercise Issue
    uses: skills/exercise-toolkit/.github/workflows/find-exercise-issue.yml@v0.4.0
  
  check_step_work:
    name: Check step work
    runs-on: ubuntu-latest
    needs: [find_exercise]
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.4.0

      - name: Update comment - checking work
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file exercise-toolkit/markdown-templates/step-feedback/checking-work.md \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
        # START: Check practical exercise

      - name: Check for MUI package
        id: check_mui
        continue-on-error: true
        run: |
          if ! grep -q '@mui/material' packages/frontend/package.json; then
            echo "@mui/material not found in frontend package.json!"
            exit 1
          fi

      - name: Check for unit tests
        id: check_unit_tests
        continue-on-error: true
        run: |
          find packages -type f -name '*test.js' | grep -q .

      - name: Check for integration tests
        id: check_integration_tests
        continue-on-error: true
        run: |
          find packages -type f -name '*integration*test.js' | grep -q .

      - name: Check for end-to-end tests
        id: check_e2e_tests
        continue-on-error: true
        run: |
          find packages -type f -name '*e2e*test.js' | grep -q .

      - name: Build message - step results
        id: build-message-step-results
        uses: skills/action-text-variables@v2
        with:
          template-file: exercise-toolkit/markdown-templates/step-feedback/step-results-table.md
          template-vars: |
            step_number: 2-5
            passed: ${{ steps.check_mui.outcome == 'success' && steps.check_unit_tests.outcome == 'success' && steps.check_integration_tests.outcome == 'success' && steps.check_e2e_tests.outcome == 'success' }}
            results_table:
              - description: "The MUI package should be present in frontend dependencies."
                passed: ${{ steps.check_mui.outcome == 'success' }}
                error_message: "@mui/material is not found in packages/frontend/package.json."
              - description: "Unit tests should be present."
                passed: ${{ steps.check_unit_tests.outcome == 'success' }}
                error_message: "No unit test files found (e.g., *test.js)."
              - description: "Integration tests should be present."
                passed: ${{ steps.check_integration_tests.outcome == 'success' }}
                error_message: "No integration test files found (e.g., *integration*test.js)."
              - description: "End-to-end tests should be present."
                passed: ${{ steps.check_e2e_tests.outcome == 'success' }}
                error_message: "No end-to-end test files found (e.g., *e2e*test.js)."

      - name: Create comment - step results
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$COMMENT_BODY" \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_BODY: ${{ steps.build-message-step-results.outputs.updated-text }}

      - name: Fail job if not all checks passed
        if: contains(steps.*.outcome, 'failure')
        run: exit 1

      # END: Check practical exercise

      - name: Build message - step finished
        id: build-message-step-finish
        uses: skills/action-text-variables@v2
        with:
          template-file: exercise-toolkit/markdown-templates/step-feedback/step-finished-prepare-next-step.md
          template-vars: |
            next_step_number: 4-1

      - name: Update comment - step finished
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$ISSUE_BODY" \
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_BODY: ${{ steps.build-message-step-finish.outputs.updated-text }}

      - name: Success
        run: echo "Build with context checks passed."
      
  post_next_step_content:
    name: Post next step content
    needs: [find_exercise, check_step_work]
    runs-on: ubuntu-latest
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.4.0

      - name: Create comment - add step content
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file ".github/steps/2-x-review.md"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Disable current workflow and enable next one
        run: |
          gh workflow disable "Step 2-5"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
